{"version":3,"sources":["Components/NewItem.js","Components/Items.js","Components/List.js","Components/AddList.js","Components/App.js","reportWebVitals.js","index.js"],"names":["NewItem","props","useState","item","setItem","className","type","placeholder","value","onChange","e","target","icon","faPlusCircle","onClick","preventDefault","newItem","quantity","isSelected","length","addItem","Items","listItem","index","removeItem","toggleComplete","increaseQuantity","decreaseQuantity","faCheckCircle","faCircle","faTimesCircle","faChevronCircleLeft","faChevronCircleRight","List","list","setList","itemToRemove","filter","newList","listName","removeList","some","alert","prev","map","faTrashAlt","AddList","setListName","listGroup","setListGroup","ref","useRef","useEffect","newState","current","newListGroup","onSubmit","name","autoComplete","App","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0e71202f.chunk.js","sourcesContent":["import { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React, { useState } from 'react';\r\n\r\nfunction NewItem(props) {\r\n    const [ item, setItem ] = useState('');\r\n\r\n    const handleTextChange = (e) => {\r\n        setItem(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newItem = {\r\n           item: item,\r\n           quantity: 1,\r\n           isSelected: false\r\n        }\r\n\r\n        if (item.length > 0) {\r\n            props.addItem(newItem);\r\n        }\r\n        setItem('');\r\n    }\r\n\r\n    return (\r\n        <div className=\"flex justify-center my-1 mb-3 border rounded-full\r\n        border-accent\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"w-5/6 mx-3 focus:outline-none text-secondary\"\r\n                placeholder=\"Add to list\"\r\n                value={item}\r\n                onChange={handleTextChange}\r\n            />\r\n            <FontAwesomeIcon icon={faPlusCircle} className=\"mx-2 my-1 text-xl text-accent\" onClick={handleSubmit} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewItem;","import { faCheckCircle, faChevronCircleLeft, faChevronCircleRight, faCircle, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport React from 'react';\r\n\r\nfunction Items(props) {\r\n    const { listItem,\r\n            index,\r\n            removeItem,\r\n            toggleComplete,\r\n            increaseQuantity,\r\n            decreaseQuantity } = props;\r\n\r\n    const handleRemoveClick = () => {\r\n        removeItem(listItem.item);\r\n    }\r\n\r\n    const handleToggleClick = () => {\r\n        toggleComplete(index);\r\n    }\r\n\r\n    const handleIncreaseClick = () => {\r\n        increaseQuantity(index);\r\n    }\r\n    const handleDecreaseClick = () => {\r\n        decreaseQuantity(index);\r\n    }\r\n\r\n    return (\r\n        <li className=\"flex list-none my-1 text-secondary\">\r\n\r\n            <div className=\"item\" onClick={handleToggleClick}>\r\n                {listItem.isSelected ? \r\n                    <div>\r\n                        <FontAwesomeIcon icon={faCheckCircle} />\r\n                        <span className=\"completed pl-2 line-through\">{listItem.item}</span>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                        <FontAwesomeIcon icon={faCircle} />\r\n                        <span className=\"pl-2\">{listItem.item}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n\r\n            <div className=\"quantity ml-auto\">\r\n                { listItem.quantity === 1 ?\r\n                    <button >\r\n                        <FontAwesomeIcon icon={faTimesCircle} onClick={handleRemoveClick} />\r\n                    </button>\r\n                    :\r\n                    <button>\r\n                        <FontAwesomeIcon icon={faChevronCircleLeft} onClick={handleDecreaseClick} />\r\n                    </button>\r\n                }\r\n                <span className=\"mx-2\">{listItem.quantity}</span>\r\n                <button>\r\n                    <FontAwesomeIcon icon={faChevronCircleRight} onClick={handleIncreaseClick} />\r\n                </button>\r\n            </div>\r\n\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Items; ","import React, {useState} from 'react';\r\nimport NewItem from './NewItem';\r\nimport Items from './Items';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nfunction List(props) {\r\n    const [ list, setList ] = useState([\r\n        { item: 'Milk', quantity: 1, isSelected: false },\r\n        { item: 'Bread', quantity: 2, isSelected: false },\r\n        { item: 'Eggs', quantity: 1, isSelected: false }, \r\n    ]);\r\n\r\n    const addItem = (item) => {\r\n        list.some(e => e.item === item.item) ? alert(\"Already on list!\") : setList(prev => [item, ...prev]);\r\n    }\r\n\r\n    const removeItem = (itemToRemove) => {\r\n        const item = list.filter(listItem => listItem.item !== itemToRemove);\r\n        setList(item);\r\n    }\r\n\r\n    // Toggle the is selected feature\r\n    const toggleComplete = (index) => {\r\n        const newList = [...list];\r\n\r\n        newList[index].isSelected = !newList[index].isSelected;\r\n        setList(newList);\r\n    }\r\n\r\n    // Update the quantities for each item on the list\r\n    const increaseQuantity = (index) => {\r\n        const newList = [...list];\r\n        newList[index].quantity++;\r\n        setList(newList);\r\n    }\r\n\r\n    const decreaseQuantity = (index) => {\r\n        const newList = [...list];\r\n        newList[index].quantity--;\r\n        setList(newList);\r\n    }\r\n\r\n    // Clear list   \r\n    const clearList = () => {\r\n        setList([]);\r\n    }\r\n\r\n    return (\r\n        <div className=\"mt-6 w-5/6 p-6 max-w-sm mx-auto bg-white opacity-90 rounded-xl\">\r\n            <div className=\"flex-shrink-0 flex flex-col\">\r\n                <h3 className=\"text-xl font-bold text-primary text-center\">{props.listName}</h3>\r\n\r\n                <button onClick={() => props.removeList(props.listName)} className=\"m-2 px-4 py-1 text-xs text-secondary rounded-full border border-secondary\r\n                 hover:text-white hover:bg-secondary hover:border-transparent\">\r\n                    Remove List\r\n                </button>\r\n\r\n                <NewItem addItem={addItem} />\r\n\r\n                <div className=\"list\"> \r\n                    <ul>\r\n                        {\r\n                            list.map((listItem, index) => {\r\n                                return <Items listItem={listItem} index={index}\r\n                                removeItem={removeItem}\r\n                                toggleComplete={toggleComplete}\r\n                                increaseQuantity={increaseQuantity}\r\n                                decreaseQuantity={decreaseQuantity} />\r\n                            })\r\n                        }\r\n                        <button className=\"clear-list mt-2 text-primary text-sm\" onClick={clearList}>\r\n                            <FontAwesomeIcon icon={faTrashAlt} /> clear list\r\n                        </button>\r\n                    </ul>\r\n                    \r\n                </div>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default List;","import React, { useEffect, useState, useRef } from 'react';\r\nimport List from './List';\r\n\r\nfunction AddList() {\r\n    const [ listName, setListName ] = useState('');\r\n    const [ listGroup, setListGroup ] = useState([]);\r\n    const ref = useRef(listGroup);\r\n\r\n    const updateState = (newState) => {\r\n        ref.current = newState;\r\n        setListGroup(newState);\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateState(listGroup);\r\n    })\r\n\r\n    const addListName = (e) => {\r\n        setListName(e.target.value);\r\n    }\r\n\r\n    const addNewList = (e) => {\r\n        e.preventDefault();\r\n        setListName('');\r\n\r\n        setListGroup([\r\n            ...listGroup, <List listName={listName} key={listName} removeList={removeList} />\r\n        ])\r\n    }\r\n\r\n    const removeList = (listName) => {\r\n        let newListGroup = ref.current.filter(list => list.props.listName !== listName);\r\n        setListGroup(newListGroup);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form className=\"flex flex-row justify-center\" onSubmit={addNewList}>\r\n                <input className=\"w-1/2 md:w-5/12 max-w-md bg-transparent border-b border-accent text-white\r\n                focus:bg-transparent focus:outline-none\"\r\n                    type=\"text\"\r\n                    name=\"item\"\r\n                    aria-label=\"Add new list\"\r\n                    placeholder=\"Add new list\"\r\n                    value={listName}\r\n                    onChange={addListName}\r\n                    autoComplete=\"off\"\r\n                />\r\n                <button type=\"submit\" className=\"w-1/3 md:w-3/12 max-w-sm p-2 bg-accent text-primary font-bold rounded-full\r\n                hover:bg-white\">\r\n                    Add List\r\n                </button>\r\n            </form>\r\n\r\n            <div>\r\n                \r\n                <div className=\"bg-primary lg:flex lg:flex-row lg:flex-wrap\">\r\n                    {listGroup}\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddList;","import React from 'react';\r\nimport AddList from './AddList';\r\n\r\nclass App extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"bg-primary h-screen w-full font-syncopate\">\r\n        <header className=\"app-header p-6 text-center\">\r\n          <div className=\"text-4xl text-white uppercase font-bold\">List Maker</div>\r\n        </header>\r\n  \r\n        <AddList />\r\n  \r\n      </div>\r\n    );\r\n\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}